# https://aur.archlinux.org/packages/marktext

pkgname=marktext
pkgver=0.16.2
pkgrel=3
pkgdesc='A simple and elegant open-source markdown editor that focused on speed and usability'
arch=('x86_64')
url='https://marktext.app'
license=('MIT')
depends=('electron8'
         'libxkbfile'
         'libsecret'
         'ripgrep')
makedepends=('jq'
             'nvm'
             'npm'
             'node-gyp'
             'moreutils'
             'yarn'
             'yq')
source=("$pkgname-$pkgver.tar.gz::https://github.com/marktext/marktext/archive/v${pkgver}.tar.gz"
        "$pkgname.sh"
        "$pkgname-arg-handling.patch")
sha256sums=('d39f3d4c3008cacdcefbe6ad9e1e19d803d3c619106878c75f8a5cc38254597c'
            '15a964fcc3f6bd7bf1c03566d35201032aecde994446533cad1f810e9b880f14'
            'c754a1cad52d10a38eeddb9293ce0a4540296c6adbb47eb5311eaaeded150a01')

prepare() {
    local electronDist=$(dirname $(realpath $(which electron7)))
    local electronVersion=$(electron7 --version | sed -e 's/^v//')

    # Use Node.js v12

    # Set local NPM cache folder
    export npm_config_cache="$srcdir/npm-cache"

    local npm_prefix=$(npm config get prefix)
    local nodeversion='12.18.4'

    npm config delete prefix
    source /usr/share/nvm/init-nvm.sh
    nvm install "$nodeversion" && nvm use "$nodeversion"

    # Set local Yarn cache folder
    export YARN_CACHE_FOLDER="$srcdir/node_modules"

    cd "$pkgname-$pkgver"
    jq 'del(.devDependencies["electron"], .scripts["preinstall", "postinstall"])' \
        package.json | sponge package.json
    yq -y ". + {\"electronDist\": \"$electronDist\", \"electronVersion\": \"$electronVersion\"}" \
        electron-builder.yml | sponge electron-builder.yml

    yarn install --frozen-lockfile
    yarn add -D -E --no-lockfile --ignore-scripts electron@$electronVersion
    patch -p1 < "$srcdir/$pkgname-arg-handling.patch"
}

build() {
    cd "$pkgname-$pkgver"
    yarn run electron-rebuild
    node .electron-vue/build.js
    yarn run electron-builder --linux --x64 --dir dist

    # Restore node config from nvm
    npm config set prefix "$npm_prefix"
    nvm unalias default
}

package() {
    cd "$pkgname-$pkgver"
    local dist=build/linux-unpacked/resources
    local rg_path="$pkgdir/usr/lib/marktext/app.asar.unpacked/node_modules/vscode-ripgrep/bin/"

    install -Dm755 "../$pkgname.sh" "$pkgdir/usr/bin/$pkgname"
    install -Dm644 -t "$pkgdir/usr/lib/$pkgname/" "$dist/app.asar"
    cp -a "$dist"/{app.asar.unpacked,hunspell_dictionaries} "$pkgdir/usr/lib/$pkgname/"
    mkdir -p $rg_path
    ln -sf /usr/bin/rg "$rg_path"
    install -Dm755 -t "${pkgdir}/usr/share/applications/" resources/linux/marktext.desktop
    install -Dm755 -t "${pkgdir}/usr/share/metainfo/" resources/linux/marktext.appdata.xml
    install -Dm644 resources/icons/icon.png "${pkgdir}/usr/share/pixmaps/marktext.png"
    install -Dm644 -t "$pkgdir/usr/share/licenses/$pkgname/" LICENSE
    install -Dm644 -t "$pkgdir/usr/share/doc/$pkgname/" README.md CONTRIBUTING.md
    cp -a docs "$pkgdir/usr/share/doc/$pkgname/"
    pushd "resources/icons"
    find -name maktext.png -exec install -Dm644 {} "$pkgdir/usr/share/icons/hicolor/{}" \;
}
