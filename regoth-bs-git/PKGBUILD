# https://aur.archlinux.org/packages/regoth-git
pkgname=regoth-bs-git
pkgver=r548.7c26ccd
pkgrel=1
pkgdesc="Reimplementation of Gothic I and II using modern technologies."
arch=('i686' 'x86_64')
url="https://regoth-project.github.io/REGoth-bs"
license=('MIT')
depends=('physfs' 'libxcursor' 'libxi' 'icu' 'mesa' 'freeglut' 'openal' 'libsquish')
makedepends=('git' 'cmake')
optdepends=('doxygen: for building documentation'
            'plantuml: for building documentation'
            'python-sphinx: for building documentation'
            'python-breathe: for building documentation'
            'python-sphinx_rtd_theme: for building documentation'
            'python-sphinxcontrib-plantuml: for building documentation')
provides=("${pkgname%-git}" 'regoth' 'libbsfSL.so=1-64' 'libbsfRenderBeast.so=1-64'
          'libbsfPhysX.so=1-64' 'libbsfOpenAudio.so=1-64' 'libbsfGLRenderAPI.so=1-64'
          'libbsfFreeImgImporter.so=1-64' 'libbsfFontImporter.so=1-64'
          'libbsfFBXImporter.so=1-64' 'libbsf.so=1-64'
          'libPhysX3_x64.so=libPhysX3_x64.so-64'
          'libPhysX3Cooking_x64.so=libPhysX3Cooking_x64.so-64'
          'libPhysX3Common_x64.so=libPhysX3Common_x64.so-64'
          'libPhysX3CharacterKinematic_x64.so=libPhysX3CharacterKinematic_x64.so-64')
conflicts=("${pkgname%-git}" 'regoth' 'bsf')
source=("${pkgname%-git}::git+https://github.com/REGoth-project/REGoth-bs.git"
        'git+https://github.com/REGoth-project/BsZenLib.git'
        'git+https://github.com/ataulien/ZenLib.git'
        'git+https://github.com/GameFoundry/bsf.git'
        'git+https://github.com/jarro2783/cxxopts.git')
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

pkgver() {
	cd "$srcdir/${pkgname%-git}"
	printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
	cd "$srcdir/${pkgname%-git}"
	git submodule init
	git config submodule."lib/BsZenLib".url "$srcdir/BsZenLib"
	git config submodule."lib/bsf".url "$srcdir/bsf"
	git submodule update

	cd "$srcdir/${pkgname%-git}/lib/BsZenLib"
	git submodule init lib/ZenLib
	git config submodule.ZenLib.url "$srcdir/ZenLib"
	git submodule update

	cd "$srcdir/${pkgname%-git}"
	mkdir -p build
}

build() {
	cd "$srcdir/${pkgname%-git}/build"
	cmake
	cmake --build . --parallel

	# Build documentation
	#cmake --build . --target REGoth_docs
}

package() {
	cd "$srcdir/${pkgname%-git}"
	install -d "$pkgdir/"usr/{bin,lib,include}
	cp -r build/bin/* "$pkgdir/usr/bin"
	cp -r build/lib/{*.so,*.so.*} "$pkgdir/usr/lib"
	cp -r build/lib/*.a "$pkgdir/usr/include"
	rm "$pkgdir"/usr/lib/libphysfs.*
	rm "$pkgdir"/usr/include/{libphysfs.*,libsquish.a}
	cp -r lib/bsf/Dependencies/PhysX/lib/*.so "$pkgdir/usr/lib"
	cp -r lib/bsf/Dependencies/PhysX/lib/*.a "$pkgdir/usr/include"
	install -Dm644 README.md -t "$pkgdir/usr/share/doc/${pkgname%-git}"
	install -Dm644 LICENSE -t "$pkgdir/usr/share/licenses/${pkgname%-git}"
}

